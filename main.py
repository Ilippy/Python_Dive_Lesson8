import module


# Вспоминаем задачу 3 из прошлого семинара.
# Мы сформировали текстовый файл с псевдо именами и произведением чисел.
# Напишите функцию, которая создаёт из созданного ранее файла новый с данными в формате JSON.
# Имена пишите с большой буквы.
# Каждую пару сохраняйте с новой строки.
def task1(file_read="names_and_numbers.txt", file_write="name_and_numbers.json"):
    module.task1.create_json_from_file(file_read, file_write)


# Напишите функцию, которая в бесконечном цикле запрашивает имя, личный идентификатор и уровень доступа (от 1 до 7).
# После каждого ввода добавляйте новую информацию в JSON файл.
# Пользователи группируются по уровню доступа.
# Идентификатор пользователя выступает ключём для имени.
# Убедитесь, что все идентификаторы уникальны независимо от уровня доступа.
# При перезапуске функции уже записанные в файл данные должны сохраняться.
def task2(file_name="names.json"):
    module.task2.task2(file_name)


# Напишите функцию, которая сохраняет созданный в прошлом задании файл в формате CSV.
def task3(json_file="names.json", csv_file="names.csv"):
    module.task3.task3(json_file, csv_file)


# Прочитайте созданный в прошлом задании csv файл без использования csv.DictReader.
# Дополните id до 10 цифр незначащими нулями.
# В именах первую букву сделайте прописной.
# Добавьте поле хеш на основе имени и идентификатора.
# Получившиеся записи сохраните в json файл, где каждая строка csv файла представлена как отдельный json словарь.
# Имя исходного и конечного файлов передавайте как аргументы функции.
def task4(csv_file="names.csv", json_file="names_json.json"):
    module.task4.task4(csv_file, json_file)


def task5():
    pass


def main():
    # task1()
    # task2()
    # task3()
    # task4()
    task5()


if __name__ == '__main__':
    main()
